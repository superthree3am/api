apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-app
  labels:
    app: backend-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-app
  template:
    metadata:
      labels:
        app: backend-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      containers:
        - name: backend-app
          image: asia-southeast2-docker.pkg.dev/am-finalproject/fathya-backend-repo/be-app:latest
          ports:
            - containerPort: 8080
              name: http
          imagePullPolicy: Always
          volumeMounts:
            - name: firebase-secret
              mountPath: /app/firebase
              readOnly: true
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          # Health checks
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 30
      volumes:
        - name: firebase-secret
          secret:
            secretName: firebase-credentials
      
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  labels:
    app: backend-app
    monitoring: "true"
spec:
  selector:
    app: backend-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: backend-app
spec:
  entryPoints:
    - web
    - websecure
  routes:
    - match: Host(backend.42n.fun)
      kind: Rule
      services:
        - name: backend-service
          port: 8080